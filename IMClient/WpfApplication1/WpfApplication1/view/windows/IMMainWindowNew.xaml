<view:WindowBase x:Class="IMClient.ImMainWindowNew"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication1"
        xmlns:IMClient="clr-namespace:IMClient"
        xmlns:view="clr-namespace:IMClient.view"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        UseLayoutRounding="True"
        mc:Ignorable="d"
        Title="" Height="581.699" Width="1199.511" Closing="WindowBase_Closing" Background="#FFECECEC">
    <Window.Resources>
        <SolidColorBrush x:Key="ButtonBrush" Color="#A5CCCCCC" />
        <SolidColorBrush x:Key="DefaultButtonBrush" Color="#FFE3E3E3" />
        <!--Scrollbar Thumbs-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FFE3E3E3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ScrollBars-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#8C8C8C" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" HorizontalAlignment="Right" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Opacity="0" Focusable="false">
                                        <RepeatButton.Command>ScrollBar.PageDownCommand</RepeatButton.Command>
                                    </RepeatButton>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Opacity="0" Focusable="false">
                                        <RepeatButton.Command>ScrollBar.PageUpCommand</RepeatButton.Command>
                                    </RepeatButton>
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}" >
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="40" />
            <Setter Property="FontFamily" Value="Tahoma"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="0,0,0,5"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}" >
                        <Grid SnapsToDevicePixels="true" >
                            <Border x:Name="Border" HorizontalAlignment="Stretch"   VerticalAlignment="Stretch" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="#19A8A8A8" TargetName="Border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style TargetType="{x:Type Ellipse}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Available}" Value="false">
                    <Setter Property="Fill" Value="#AAD13438" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Available}" Value="true">
                    <Setter Property="Fill"  Value="#AA5BA45B" />
                </DataTrigger>
            </Style.Triggers>
        </Style>-->
        <Style x:Key="StatusStyle" TargetType="{x:Type Rectangle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Available}" Value="false">
                    <Setter Property="Fill" Value="#CCD13438" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Available}" Value="true">
                    <Setter Property="Fill"  Value="#CC5BA45B" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=NewMessages}" Value="false">

                    <Setter Property="Background" Value="#00000000" />
                    <Setter Property="Height" Value="0" />
                    <Setter Property="Width" Value="0" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=NewMessages}" Value="true">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Background" Value="#CCE42C2C" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="Height" Value="30" />
                    <Setter Property="Width" Value="30" />
                    <Setter Property="CornerRadius" Value="8" />
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                 Storyboard.TargetProperty="Opacity"
                 From="0.25" To="0.9" Duration="0:0:1" 
                 RepeatBehavior="Forever"
                 AutoReverse="True"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard FillBehavior="Stop">
                                <DoubleAnimation
                  Storyboard.TargetProperty="Opacity"
                  To="1" Duration="0:0:1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ContentControl">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <Grid>
                            <Ellipse Width="30" Height="30" Stroke="#33292929" StrokeThickness="1" >

                            </Ellipse>
                            <ContentPresenter  HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="240" MaxWidth="260" MinWidth="200"></ColumnDefinition>
            <ColumnDefinition Width="0.5*"></ColumnDefinition>
            <ColumnDefinition Width="471*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="97*"/>
            <RowDefinition Height="394*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Background="#FFECECEC">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="11*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="30*"></RowDefinition>
            </Grid.RowDefinitions>
            <StackPanel Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.RowSpan="2" Grid.Row="0" >
                <TextBlock   VerticalAlignment="Center"  HorizontalAlignment="Center" Text="{Binding user.UserName}" FontFamily="Calibri Light" FontSize="28"  Foreground="#C6191919"/>
                <TextBlock  FontFamily="Calibri Light" FontSize="14" HorizontalAlignment="Center">
                    <TextBlock.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding user.LoggedIn}" Value="false">
                                    <Setter Property="TextBlock.Foreground" Value="#FFD13438" />
                                    <Setter Property="TextBlock.Text" Value="Offline"></Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding user.LoggedIn}" Value="true">
                                    <Setter Property="TextBlock.Foreground"  Value="#FF5BA45B" />
                                    <Setter Property="TextBlock.Text" Value="Online"></Setter>

                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
            <WrapPanel HorizontalAlignment="Stretch" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Name="wrappanel" Margin="0,0,1,-0.5">
                <WrapPanel.Triggers>
                    <EventTrigger SourceName="FirstButton" 
                      RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FirstButton"
                                       Storyboard.TargetProperty="Background">

                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                    Value="{StaticResource ButtonBrush}" />
                                </ObjectAnimationUsingKeyFrames>

                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FavouriteButton"
                                       Storyboard.TargetProperty="Background">

                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                    Value="{StaticResource DefaultButtonBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger SourceName="FavouriteButton" 
                      RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FirstButton"
                                       Storyboard.TargetProperty="Background">

                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                    Value="{StaticResource DefaultButtonBrush}" />
                                </ObjectAnimationUsingKeyFrames>

                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FavouriteButton"
                                       Storyboard.TargetProperty="Background">

                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                    Value="{StaticResource ButtonBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </WrapPanel.Triggers>
                <Grid HorizontalAlignment="Stretch" Width="{Binding ElementName=wrappanel, Path=ActualWidth}" Height="{Binding ElementName=wrappanel, Path=ActualHeight}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6*"></ColumnDefinition>
                        <ColumnDefinition Width="7*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button Name="FirstButton" Grid.Column="0" BorderBrush="#FF027D91" BorderThickness="0,1,0,0"  FontFamily="Calibri Light" FontSize="16" Content="Contacts" Foreground="#C6191919" Background="#A5CCCCCC" Click="FirstButton_Click">

                    </Button>
                    <Button Name="FavouriteButton" Grid.Column="1" BorderBrush="#FF027D91" BorderThickness="0,1,0,0"  FontFamily="Calibri Light" FontSize="16" Content="Favourites" Foreground="#C6191919" Click="SecondButton_Click" Background="#FFE3E3E3" />
                </Grid>
            </WrapPanel>
        </Grid>
        <Grid Row="1" Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="300*"></RowDefinition>
                <RowDefinition Height="30*"></RowDefinition>
            </Grid.RowDefinitions>

            <ListBox Grid.Row="0" x:Name="ListBuddies" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0" ItemsSource="{Binding clients}" IsSynchronizedWithCurrentItem="True" PreviewMouseDown="ListBuddies_PreviewMouseDown" FontSize="13.333"  Background="#FFECECEC" FontFamily="Calibri Light" SelectionChanged="ListBuddies_SelectionChanged">
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Add" Click="AddBuddy"></MenuItem>
                        <MenuItem Header="Remove" Click="RemoveBuddy"></MenuItem>
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid Height="40" Background="Transparent" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="40*" />
                                    <ColumnDefinition Width="130" />
                                    <ColumnDefinition Width="40*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Rectangle  Style="{StaticResource StatusStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                <ContentControl Grid.Column="1" HorizontalAlignment="Center" Padding="10,0,0,0">
                                    <Image  Width="22" Height="22" Source="Resources/images/userhuge.png" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" RenderOptions.BitmapScalingMode="HighQuality">
                                    </Image>
                                </ContentControl>
                                <TextBlock Grid.Column="2" Foreground="#FF4B4B4B" HorizontalAlignment="Stretch" VerticalAlignment="Center" Padding="15,0,0,0" Text="{Binding UserName}" FontFamily="Calibri Light" FontSize="18"/>
                                <Border Grid.Column="3" Style="{StaticResource BorderStyle}">
                                    <TextBlock x:Name="MessageAlert" Text="{Binding Received, Mode=TwoWay, TargetNullValue={x:Static sys:String.Empty},
NotifyOnSourceUpdated=True,  UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Calibri Light" FontSize="18" Foreground="#FFECECEC"/>
                                </Border>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Border Grid.Row="1"  BorderThickness="0,1,0,0" BorderBrush="#FFCCCCCC" VerticalAlignment="Stretch" Margin="0,2,0,0">
                <Border HorizontalAlignment="Stretch" BorderThickness="0,0,0,0" Background="#FFECECEC" Height="36"
                	VerticalAlignment="Top">
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="BorderBrush" Value="#FFCCCCCC" />
                            <!--<Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#FF0B8297" />
                                </Trigger>
                            </Style.Triggers>-->
                        </Style>
                    </Border.Style>
                    <Grid>
                        <!--<Image Source="Resources/images/search-512.png" HorizontalAlignment="left" Width="36" Margin="-36,0,0,0" RenderOptions.BitmapScalingMode="HighQuality"
                			/>-->
                        <TextBox x:Name="SearchForclientTextBox" Text="Search..." HorizontalAlignment="Stretch" TextWrapping="Wrap" BorderThickness="0,0,0,0"
                			Background="Transparent" VerticalContentAlignment="Center"
                			FontFamily="Calibri Light" FontSize="16" Padding="10,0,0,0" BorderBrush="#FFCCCCCC" Foreground="#FF4B4B4B" GotFocus="TextBoxLocalDirectory_GotFocus" LostFocus="TextBoxLocalDirectory_LostFocus" TextChanged="SearchForclientTextBox_TextChanged" />
                    </Grid>
                </Border>
            </Border>
        </Grid>
        <GridSplitter Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" HorizontalAlignment="Stretch" Background="#FFCCCCCC"></GridSplitter>
        <Grid Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Stretch" x:Name="gridBuddies" Margin="4,0,-3.5,0">

        </Grid>
    </Grid>
</view:WindowBase>